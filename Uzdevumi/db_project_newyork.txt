CREATE TABLE nomnom (
    name TEXT,
    neighbourhood TEXT,
    cuisine TEXT,
    review REAL,
    price INTEGER,
    health TEXT
);

-- We'll use a WITH clause to generate our random data
WITH RECURSIVE random_data AS (
    SELECT 1 AS id,
        'Restaurant' || (ABS(RANDOM()) % 1000 + 1) AS name, -- Generates names like 'Restaurant1', 'Restaurant2', etc.
        CASE ABS(RANDOM()) % 5 
            WHEN 0 THEN 'Midtown' 
            WHEN 1 THEN 'Downtown'
            WHEN 2 THEN 'Chinatown'
            WHEN 3 THEN 'Uptown'
            ELSE 'Brooklyn' END AS neighbourhood,
        CASE ABS(RANDOM()) % 5 
            WHEN 0 THEN 'Chinese' 
            WHEN 1 THEN 'Italian'
            WHEN 2 THEN 'Indian'
            WHEN 3 THEN 'Mexican'
            ELSE 'French' END AS cuisine,
        (ABS(RANDOM()) % 10 + 1) AS review,  -- Generates numbers between 1 and 10
        (ABS(RANDOM()) % 200 + 1) AS price,  -- Generates numbers between 1 and 200
        CASE ABS(RANDOM()) % 6
            WHEN 0 THEN 'A'
            WHEN 1 THEN 'B'
            WHEN 2 THEN 'C'
            WHEN 3 THEN 'D'
            WHEN 4 THEN 'E'
            ELSE 'F' END AS health
    UNION ALL
    SELECT id + 1,
        'Restaurant' || (ABS(RANDOM()) % 1000 + 1),
        CASE ABS(RANDOM()) % 5 
            WHEN 0 THEN 'Midtown' 
            WHEN 1 THEN 'Downtown'
            WHEN 2 THEN 'Chinatown'
            WHEN 3 THEN 'Uptown'
            ELSE 'Brooklyn' END,
        CASE ABS(RANDOM()) % 5 
            WHEN 0 THEN 'Chinese' 
            WHEN 1 THEN 'Italian'
            WHEN 2 THEN 'Indian'
            WHEN 3 THEN 'Mexican'
            ELSE 'French' END,
        (ABS(RANDOM()) % 10 + 1),
        (ABS(RANDOM()) % 200 + 1),
        CASE ABS(RANDOM()) % 6
            WHEN 0 THEN 'A'
            WHEN 1 THEN 'B'
            WHEN 2 THEN 'C'
            WHEN 3 THEN 'D'
            WHEN 4 THEN 'E'
            ELSE 'F' END
    FROM random_data
    WHERE id < 100
)

-- Inserting the generated data into the nomnom table
INSERT INTO nomnom (name, neighbourhood, cuisine, review, price, health)
SELECT name, neighbourhood, cuisine, review, price, health
FROM random_data;

SELECT * FROM nomnom;



UZDEVUMI:

Start by getting a feel for the nomnom table:

SELECT *
FROM nomnom;

What are the column names?

2.
What are the distinct neighborhoods?

3.
What are the distinct cuisine types?

4.
Suppose we would like some Chinese takeout.

What are our options?

5.
Return all the restaurants with reviews of 4 and above.


6.
Suppose Abbi and Ilana want to have a fancy dinner date.

Return all the restaurants that are Italian and $$$.

7.
Your coworker Trey can’t remember the exact name of a restaurant he went to but he knows it contains the number ‘857’ in it.

Can you find it for him using a query?

8.
Let’s order delivery to the house!

Find all the close by spots in Midtown, Downtown or Chinatown.

(OR can be used more than once)

9.
Find all the health grade pending restaurants (empty values).

10.
Create a Top 10 Restaurants Ranking based on reviews.

11.
Use a CASE statement to change the rating system to:

review > 4.5 is Extraordinary
review > 4 is Excellent
review > 3 is Good
review > 2 is Fair
Everything else is Poor
Don’t forget to rename the new column!
